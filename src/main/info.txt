Пакет config:
1.	SwaggerConfig.java:
•	Описание: Класс конфигурации для Swagger, инструмента для документирования и тестирования веб-сервисов.
•	Ответственность: Настройка и конфигурация Swagger.
2.	SecurityConfig.java:
•	Описание: Класс конфигурации для Spring Security.
•	Ответственность: Настройка аутентификации и авторизации в приложении.
3.	WebMvcConfig.java:
•	Описание: Класс конфигурации для веб-слоя MVC.
•	Ответственность: Настройка обработки HTTP-запросов.
Пакет controller:
4.	AdminController.java:
•	Описание: Контроллер для администраторских функций.
•	Ответственность: Обработка HTTP-запросов, связанных с административными функциями.
5.	AppointmentController.java:
•	Описание: Контроллер для управления записями на процедуры.
•	Ответственность: Обработка HTTP-запросов, связанных с записями на процедуры.
6.	ErrorHandlingAdvice.java:
•	Описание: Класс, обрабатывающий исключения в приложении.
•	Ответственность: Обработка ошибок и возврат клиенту соответствующих сообщений.
7.	MasterController.java:
•	Описание: Контроллер для функциональности мастера (специалиста).
•	Ответственность: Обработка HTTP-запросов, связанных с действиями мастера.
8.	ProcedureController.java:
•	Описание: Контроллер для управления процедурами.
•	Ответственность: Обработка HTTP-запросов, связанных с процедурами.
9.	UserController.java:
•	Описание: Контроллер для функциональности пользователя.
•	Ответственность: Обработка HTTP-запросов, связанных с действиями пользователя.
10.	HomeController.java:
•	Описание: Контроллер для обработки домашней страницы.
•	Ответственность: Обработка HTTP-запросов, связанных с домашней страницей.
Пакет dto:
11.	ProcedureWithPriceDto.java:
•	Описание: DTO (Data Transfer Object) для передачи данных о процедуре с указанием цены.
•	Ответственность: Передача данных о процедуре с ценой между слоями приложения.
12.	UserDto.java:
•	Описание: DTO для передачи данных о пользователе.
•	Ответственность: Передача данных о пользователе между слоями приложения.
13.	MasterDto.java:
•	Описание: DTO для передачи данных о мастере.
•	Ответственность: Передача данных о мастере между слоями приложения.
14.	AdminDto.java:
•	Описание: DTO для передачи данных об администраторе.
•	Ответственность: Передача данных об администраторе между слоями приложения.
•Пакет entity:
15.	User.java:
•	Описание: Класс, представляющий сущность пользователя в базе данных.
•	Ответственность: Определение структуры и свойств пользователя.
16.	Procedure.java:
•	Описание: Класс, представляющий сущность процедуры в базе данных.
•	Ответственность: Определение структуры и свойств процедуры.
17.	Appointment.java:
•	Описание: Класс, представляющий сущность записи на процедуру в базе данных.
•	Ответственность: Определение структуры и свойств записи на процедуру.
18.	VerificationToken.java:
•	Описание: Класс, представляющий сущность токена подтверждения регистрации.
•	Ответственность: Определение структуры и свойств токена.
19.	Role.java:
•	Описание: Класс, представляющий роль пользователя в системе.
•	Ответственность: Определение структуры и свойств роли.
20.	UserRole.java:
•	Описание: Класс, представляющий отношение между пользователем и его ролями.
•	Ответственность: Определение структуры и свойств отношения пользователя к ролям.
Пакет model:
21.	AppointmentStatus.java:
•	Описание: Enum для представления статусов записи на процедуру.
•	Ответственность: Определение возможных статусов записи.
Пакет repository:
22.	UserRepository.java, ProcedureRepository.java, ... (и другие репозитории):
•	Описание: Интерфейсы для взаимодействия с базой данных.
•	Ответственность: Обеспечение доступа к данным с использованием JPA.
Пакет service:
23.	UserService.java, ProcedureService.java, ... (и другие сервисы):
•	Описание: Сервисы для обработки бизнес-логики.
•	Ответственность: Реализация бизнес-логики, взаимодействие с репозиториями.
24.	UserDetailsServiceImpl.java:
•	Описание: Реализация интерфейса UserDetails для Spring Security.
•	Ответственность: Предоставление информации о пользователе для аутентификации.
25.	VerificationTokenService.java:
•	Описание: Сервис для работы с токенами подтверждения регистрации.
•	Ответственность: Управление созданием, валидацией и хранением токенов.
26.	EmailService.java:
•	Описание: Сервис для отправки электронных писем.
•	Ответственность: Отправка уведомлений и подтверждений по электронной почте.
Пакет validation:
27.	UserValidator.java, ProcedureValidator.java:
•	Описание: Классы для валидации данных пользователя и процедуры.
•	Ответственность: Проверка данных на соответствие заданным правилам.
28.	ValidUser.java, ValidProcedure.java:
•	Описание: Аннотации для использования в валидаторах.
•	Ответственность: Определение собственных аннотаций для валидации.
Пакет exception:
29.	ResourceNotFoundException.java:
•	Описание: Исключение, выбрасываемое при отсутствии запрошенного ресурса.
•	Ответственность: Обработка случаев отсутствия ресурсов

30.	BeautyProjectApplication.java:
•	Описание: Основной класс приложения, точка входа.
•	Ответственность: Запуск приложения.


31.	application.properties:
•	Описание: Файл конфигурации приложения.
•	Ответственность: Настройка параметров приложения.
32.	templates/user/registration.html:
•	Описание: HTML-шаблон для страницы регистрации пользователя.
•	Ответственность: Отображение формы регистрации.
33.	static/css/style.css:
•	Описание: Файл стилей для визуального оформления страниц.
•	Ответственность: Оформление внешнего вида.
34.	static/js:
•	Описание: Папка с JavaScript-файлами (по вашей структуре).
•	Ответственность: Логика взаимодействия на клиентской стороне.
